cmake_minimum_required (VERSION 3.7)
if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Release CACHE STRING "Debug or Release")
endif()
project(FMCWchirp Fortran)
enable_testing()

if(CMAKE_Fortran_COMPILER_ID STREQUAL Intel)
  if(WIN32)
    set(FFLAGS /4Yd /stand:f18 /heap-arrays)
  else()
    set(FFLAGS -implicit-none -stand f18  -heap-arrays)
    if(CMAKE_BUILD_TYPE STREQUAL Debug)
      set(FFLAGS -check all -traceback -warn -debug extended -fpe0)
    endif()
  endif()
elseif(CMAKE_Fortran_COMPILER_ID STREQUAL GNU)
  if(CMAKE_Fortran_COMPILER_VERSION VERSION_GREATER_EQUAL 8.1)
    set(FFLAGS -std=f2018)
  endif()

  list(APPEND FFLAGS -fimplicit-none -march=native -Wall -Wextra -Wpedantic -Werror=array-bounds)
  if(CMAKE_BUILD_TYPE STREQUAL Debug)
    list(APPEND FFLAGS -fcheck=all)
  endif()
elseif(CMAKE_Fortran_COMPILER_ID STREQUAL PGI)

elseif(CMAKE_Fortran_COMPILER_ID STREQUAL Flang)

endif()
#------------
add_library(fwdmodel fwdmodel.f90 comm.f90)
target_compile_options(fwdmodel PRIVATE ${FFLAGS})

add_executable(chirp test_chirp.f90)
target_compile_options(chirp PRIVATE ${FFLAGS})
target_link_libraries(chirp PRIVATE fwdmodel)
add_test(NAME FortranChirp COMMAND chirp)
set_tests_properties(FortranChirp PROPERTIES TIMEOUT 10)

